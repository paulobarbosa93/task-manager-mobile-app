"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var modal_dialog_1 = require("nativescript-angular/modal-dialog");
var page_1 = require("ui/page");
var DateTimePickerModalComponent = /** @class */ (function () {
    function DateTimePickerModalComponent(modalParams, page) {
        this.modalParams = modalParams;
        this.page = page;
        if (this.modalParams.context && this.modalParams.context.preSelectedDateTime) {
            this.preSelectedDateTime = this.modalParams.context.preSelectedDateTime;
        }
        else {
            this.preSelectedDateTime = new Date();
        }
    }
    DateTimePickerModalComponent.prototype.ngOnInit = function () { };
    DateTimePickerModalComponent.prototype.onDatePickerLoaded = function (args) {
        this.setDatePicker(args);
    };
    DateTimePickerModalComponent.prototype.onTimePickerLoaded = function (args) {
        this.setTimePicker(args);
    };
    DateTimePickerModalComponent.prototype.setDatePicker = function (args) {
        this.datePicker = args.object;
        this.datePicker.height = 150;
        this.datePicker.year = this.preSelectedDateTime.getFullYear();
        this.datePicker.month = this.preSelectedDateTime.getMonth() + 1;
        this.datePicker.day = this.preSelectedDateTime.getDate();
    };
    DateTimePickerModalComponent.prototype.setTimePicker = function (args) {
        this.timePicker = args.object;
        this.timePicker.height = 150;
        this.timePicker.hour = this.preSelectedDateTime.getHours();
        this.timePicker.minute = this.preSelectedDateTime.getMinutes();
    };
    DateTimePickerModalComponent.prototype.sendNewDateTime = function () {
        var newDateTime = new Date(this.datePicker.year, this.datePicker.month - 1, this.datePicker.day, this.timePicker.hour, this.timePicker.minute);
        this.modalParams.closeCallback(newDateTime);
    };
    DateTimePickerModalComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            templateUrl: './datetime-picker-modal.component.html'
        }),
        __metadata("design:paramtypes", [modal_dialog_1.ModalDialogParams, page_1.Page])
    ], DateTimePickerModalComponent);
    return DateTimePickerModalComponent;
}());
exports.DateTimePickerModalComponent = DateTimePickerModalComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXRpbWUtcGlja2VyLW1vZGFsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRhdGV0aW1lLXBpY2tlci1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzQ0FBa0Q7QUFFbEQsa0VBQXNFO0FBQ3RFLGdDQUErQjtBQVMvQjtJQUtFLHNDQUEyQixXQUE4QixFQUFVLElBQVU7UUFBbEQsZ0JBQVcsR0FBWCxXQUFXLENBQW1CO1FBQVUsU0FBSSxHQUFKLElBQUksQ0FBTTtRQUMzRSxJQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLG1CQUFtQixFQUFFO1lBQzNFLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztTQUN6RTthQUFNO1lBQ0wsSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7U0FDdkM7SUFDSCxDQUFDO0lBRU0sK0NBQVEsR0FBZixjQUFtQixDQUFDO0lBRWIseURBQWtCLEdBQXpCLFVBQTBCLElBQUk7UUFDNUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRU0seURBQWtCLEdBQXpCLFVBQTBCLElBQUk7UUFDNUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRU0sb0RBQWEsR0FBcEIsVUFBcUIsSUFBSTtRQUN2QixJQUFJLENBQUMsVUFBVSxHQUFlLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDMUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1FBQzdCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUM5RCxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMzRCxDQUFDO0lBRU0sb0RBQWEsR0FBcEIsVUFBcUIsSUFBSTtRQUN2QixJQUFJLENBQUMsVUFBVSxHQUFlLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDMUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1FBQzdCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUMzRCxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDakUsQ0FBQztJQUVNLHNEQUFlLEdBQXRCO1FBQ0UsSUFBSSxXQUFXLEdBQVMsSUFBSSxJQUFJLENBQzlCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUNwQixJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQ3pCLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUNuQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFDcEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQ3ZCLENBQUE7UUFFRCxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBaERVLDRCQUE0QjtRQUx4QyxnQkFBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLE1BQU0sQ0FBQyxFQUFFO1lBQ25CLFdBQVcsRUFBRSx3Q0FBd0M7U0FDdEQsQ0FBQzt5Q0FPd0MsZ0NBQWlCLEVBQWdCLFdBQUk7T0FMbEUsNEJBQTRCLENBaUR4QztJQUFELG1DQUFDO0NBQUEsQUFqREQsSUFpREM7QUFqRFksb0VBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTW9kYWxEaWFsb2dQYXJhbXMgfSBmcm9tICduYXRpdmVzY3JpcHQtYW5ndWxhci9tb2RhbC1kaWFsb2cnO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gJ3VpL3BhZ2UnO1xuaW1wb3J0IHsgRGF0ZVBpY2tlciB9IGZyb20gJ3Rucy1jb3JlLW1vZHVsZXMvdWkvZGF0ZS1waWNrZXInO1xuaW1wb3J0IHsgVGltZVBpY2tlciB9IGZyb20gJ3Rucy1jb3JlLW1vZHVsZXMvdWkvdGltZS1waWNrZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgdGVtcGxhdGVVcmw6ICcuL2RhdGV0aW1lLXBpY2tlci1tb2RhbC5jb21wb25lbnQuaHRtbCdcbn0pXG5cbmV4cG9ydCBjbGFzcyBEYXRlVGltZVBpY2tlck1vZGFsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgcHVibGljIHByZVNlbGVjdGVkRGF0ZVRpbWU6IERhdGU7XG4gIHB1YmxpYyBkYXRlUGlja2VyOiBEYXRlUGlja2VyO1xuICBwdWJsaWMgdGltZVBpY2tlcjogVGltZVBpY2tlcjtcblxuICBwdWJsaWMgY29uc3RydWN0b3IocHJpdmF0ZSBtb2RhbFBhcmFtczogTW9kYWxEaWFsb2dQYXJhbXMsIHByaXZhdGUgcGFnZTogUGFnZSl7XG4gICAgaWYodGhpcy5tb2RhbFBhcmFtcy5jb250ZXh0ICYmIHRoaXMubW9kYWxQYXJhbXMuY29udGV4dC5wcmVTZWxlY3RlZERhdGVUaW1lKSB7XG4gICAgICB0aGlzLnByZVNlbGVjdGVkRGF0ZVRpbWUgPSB0aGlzLm1vZGFsUGFyYW1zLmNvbnRleHQucHJlU2VsZWN0ZWREYXRlVGltZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wcmVTZWxlY3RlZERhdGVUaW1lID0gbmV3IERhdGUoKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgbmdPbkluaXQoKXsgfVxuXG4gIHB1YmxpYyBvbkRhdGVQaWNrZXJMb2FkZWQoYXJncykge1xuICAgIHRoaXMuc2V0RGF0ZVBpY2tlcihhcmdzKTtcbiAgfVxuXG4gIHB1YmxpYyBvblRpbWVQaWNrZXJMb2FkZWQoYXJncykge1xuICAgIHRoaXMuc2V0VGltZVBpY2tlcihhcmdzKTtcbiAgfVxuXG4gIHB1YmxpYyBzZXREYXRlUGlja2VyKGFyZ3Mpe1xuICAgIHRoaXMuZGF0ZVBpY2tlciA9IDxEYXRlUGlja2VyPmFyZ3Mub2JqZWN0O1xuICAgIHRoaXMuZGF0ZVBpY2tlci5oZWlnaHQgPSAxNTA7XG4gICAgdGhpcy5kYXRlUGlja2VyLnllYXIgPSB0aGlzLnByZVNlbGVjdGVkRGF0ZVRpbWUuZ2V0RnVsbFllYXIoKTtcbiAgICB0aGlzLmRhdGVQaWNrZXIubW9udGggPSB0aGlzLnByZVNlbGVjdGVkRGF0ZVRpbWUuZ2V0TW9udGgoKSArIDE7XG4gICAgdGhpcy5kYXRlUGlja2VyLmRheSA9IHRoaXMucHJlU2VsZWN0ZWREYXRlVGltZS5nZXREYXRlKCk7XG4gIH1cblxuICBwdWJsaWMgc2V0VGltZVBpY2tlcihhcmdzKXtcbiAgICB0aGlzLnRpbWVQaWNrZXIgPSA8VGltZVBpY2tlcj5hcmdzLm9iamVjdDtcbiAgICB0aGlzLnRpbWVQaWNrZXIuaGVpZ2h0ID0gMTUwO1xuICAgIHRoaXMudGltZVBpY2tlci5ob3VyID0gdGhpcy5wcmVTZWxlY3RlZERhdGVUaW1lLmdldEhvdXJzKCk7XG4gICAgdGhpcy50aW1lUGlja2VyLm1pbnV0ZSA9IHRoaXMucHJlU2VsZWN0ZWREYXRlVGltZS5nZXRNaW51dGVzKCk7XG4gIH1cblxuICBwdWJsaWMgc2VuZE5ld0RhdGVUaW1lKCkge1xuICAgIGxldCBuZXdEYXRlVGltZTogRGF0ZSA9IG5ldyBEYXRlKFxuICAgICAgdGhpcy5kYXRlUGlja2VyLnllYXIsXG4gICAgICB0aGlzLmRhdGVQaWNrZXIubW9udGggLSAxLFxuICAgICAgdGhpcy5kYXRlUGlja2VyLmRheSxcbiAgICAgIHRoaXMudGltZVBpY2tlci5ob3VyLFxuICAgICAgdGhpcy50aW1lUGlja2VyLm1pbnV0ZVxuICAgIClcblxuICAgIHRoaXMubW9kYWxQYXJhbXMuY2xvc2VDYWxsYmFjayhuZXdEYXRlVGltZSk7XG4gIH1cbn1cbiJdfQ==